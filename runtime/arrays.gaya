(* This file contains functions that work on arrays. *)

(*
  Return whether the given array is empty.
  @param a <array> The array.
*)
array.isempty :: { a => array.length(a) == 0 }

(* Return an array with the numbers from start to finish exclusive. 
  @param start <number> The start of the range.
  @param finish <number> The non-inclusive end of the range. *)
array.range :: { start: Number, finish: Number => do
    let i = start, a = () in do
      while i < finish : &i <- i + 1
        array.push(a, i).
      end

      a
    end
  end
}

(*
  Return a string that is the result of joining the elements of the provided
  array by the given separator.
  @param a <array> The array to join.
  @param sep <string> The separator to use
*)
array.join :: { a: Array, sep: String => do
    let i = 0, result = "" in do
      while i < array.length(a) : &i <- i + 1
        &result <- string.concat(result, tostring(a(i)))
        cases
          given i < array.length(a) - 1 => 
            perform &result <- string.concat(result, sep)
        end.
      end

      result
    end
  end
}
