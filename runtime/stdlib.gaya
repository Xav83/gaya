(* Strings *)

string.first :: { s =>
  (* TODO: Check that string is at least 1 char. *)
  cases
    given typeof(s) == "string" => s(0)
    otherwise                   => unit
  end
}

string.last :: { s =>
  (* TODO: Check that string is non-empty. *)
  cases
    given typeof(s) == "string" => s(string.length(s) - 1)
    otherwise                   => unit
  end
}

string.startswith :: { s, pattern =>
  cases
    given string.length(s) < string.length(pattern) => 0
    otherwise =>
      let i = 0 in
      let result = 1 in do
        (* TODO: Check for result falsey here as well. *)
        while i < string.length(pattern) do
          discard
            cases
              (* TODO: Replace with not equals. *)
              given s(i) == pattern(i) => unit
              otherwise                => perform result <- 0
            end
          i <- i + 1
        done

        result
      done
  end
}
